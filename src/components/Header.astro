---
import MenuOpen from "../../public/assets/menu-open.svg";
import MenuClose from "../../public/assets/menu-close.svg";

---

<header>
  <a href="/"><strong>neuro<span style="color: var(--clr-light);">impact</span></strong></a>
  <nav>
    <button
      class="topnav-open"
      aria-expanded="false"
      aria-label="open menu"
      aria-controls="topnav-menu"
    >
      <MenuOpen width={28} height={28} />
    </button>
    <div id="topnav-menu" class="topnav-menu">
      <button class="topnav-close" aria-label="close menu">
        <MenuClose width={28} height={28} />
      </button>
      <ul>
        <li><a href="/">Home</a></li>
        <li><a href="/research">Research</a></li>
        <li><a href="/vision">Our Vision</a></li>
        <li><a href="/news">News</a></li>
        <li><a href="/partners">Partners</a></li>
        <li><a href="/contact">Contact</a></li>
      </ul>
    </div>
    <div class="nav-overlay"></div>
  </nav>
</header>

<script>
  // coupled with css breakpoint
  const mobileQuery = window.matchMedia("(width < 1100px)");


  function selectElements() {
    const navLInks = document.querySelector("ul") as HTMLUListElement;
    const mobileNav = document.querySelector(".topnav-menu") as HTMLDivElement;
    const closeBtn = document.querySelector(".topnav-close") as HTMLButtonElement;
    const openBtn = document.querySelector(".topnav-open") as HTMLButtonElement;
    const overlay = document.querySelector(".nav-overlay") as HTMLDivElement;

    return {
      navLInks,
      mobileNav,
      closeBtn,
      openBtn,
      overlay
    }
  }
  
  function updateNavState() {
    const { mobileNav, navLInks, openBtn, closeBtn, overlay } = selectElements();

    if (mobileQuery.matches) {
      navLInks.inert = true;
      closeBtn.inert = true;
      mobileNav.setAttribute("aria-hidden", "true");

      //fixes issue of menu popping out when changing screen size
      mobileNav.style.transition = "none";
      overlay.style.transition = "none";
      setTimeout(() => {
        mobileNav.removeAttribute("style");
        overlay.removeAttribute("style");
      }, 0);
    } else {
      openBtn.setAttribute("aria-expanded", "false");
      mobileNav.removeAttribute("aria-hidden");
      navLInks.inert = false;
      closeBtn.inert = false;
    }
  }

  function openMobileMenu() {
    const { mobileNav, navLInks, openBtn, closeBtn } = selectElements();

    openBtn.setAttribute("aria-expanded", "true");
    mobileNav.setAttribute("aria-hidden", "false");
    navLInks.inert = false;
    closeBtn.inert = false;
    closeBtn.focus();
  }

  function closeMobileMenu() {
    const { mobileNav, navLInks, openBtn, closeBtn } = selectElements();

    openBtn.setAttribute("aria-expanded", "false");
    mobileNav.setAttribute("aria-hidden", "true");
    navLInks.inert = true;
    closeBtn.inert = true;
    openBtn.focus();
  }

  function highlightActive() {
    const currentUrl = window.location.pathname;
    const navLinks = document.querySelectorAll("nav ul li a");

    navLinks.forEach((link) => {
      let currentLink = link.getAttribute("href");
      if (currentLink !== "/") {
        currentLink = currentLink + "/";
      }
      if (currentLink === currentUrl) {
        link.classList.add("active");
      } else {
        link.classList.remove("active");
      }
    });
  }


  function initializeHeader() {
    const { openBtn, closeBtn, overlay } = selectElements();

    openBtn.addEventListener("click", openMobileMenu);
    closeBtn.addEventListener("click", closeMobileMenu);
    overlay.addEventListener("click", closeMobileMenu);

    highlightActive();
    updateNavState();
  }

  document.addEventListener("astro:page-load", () => {
    initializeHeader();
  });

  mobileQuery.addEventListener("change", updateNavState);
</script>

<style>
  .active {
    color: var(--clr-light);
  }
  header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 8px;
    background: transparent;
  }

  header > a {
    font-size: 1.25rem;
  }

  ul {
    display: flex;
    gap: 100px;
    list-style-type: none;
  }

  button {
    display: none;
    cursor: pointer;
  }

  button,
  a {
    position: relative;
    z-index: 1;
  }

  /* coupled with script breakpoint */
  @media (width < 1100px) {
    button {
      display: block;
    }
    .topnav-menu {
      background-color: var(--clr-bg-gradient-night);
      position: fixed;
      z-index: 3;
      inset: 0 0 0 50%;
      translate: 100vw 0;
      transition: translate 0.3s ease-in-out;
    }

    .nav-overlay {
      position: fixed;
      inset: 0;
      background-color: rgba(0, 0, 0, 0.7);
      z-index: 2;
      opacity: 0;
      transition: opacity 0.3s ease-in-out;
      pointer-events: none;
    }
    
    .topnav-open[aria-expanded="true"] ~ .nav-overlay {
      opacity: 1;
      pointer-events: auto;
    }


    ul {
      flex-direction: column;
      align-items: end;
      margin: 25px 50px 0 0;
      padding-right: 25px;
      gap: 25px;
      border-right: 2px solid grey;
    }

    .topnav-close {
      margin-inline-start: auto;
      padding: 8px;
    }

    .topnav-open[aria-expanded="true"] + .topnav-menu {
      translate: 0;
    }
  }

  @media (width < 500px) {
    .topnav-menu {
      inset: 0;
    }
  }
</style>
